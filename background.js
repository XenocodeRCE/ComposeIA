chrome.runtime.onInstalled.addListener(() => {
  // Cr√©er le menu parent "ComposeIA"
  chrome.contextMenus.create({
    id: "ComposeIA",
    title: "ComposeIA",
    contexts: ["selection"]
  });

  // Sous-menu pour "Am√©liorer le style"
  chrome.contextMenus.create({
    id: "improve-style",
    parentId: "ComposeIA",
    title: "ü™Ñ Am√©liorer le style",
    contexts: ["selection"]
  });

  // Sous-menu pour "Corriger la grammaire et l'orthographe"
  chrome.contextMenus.create({
    id: "correct-grammar",
    parentId: "ComposeIA",
    title: "‚úçÔ∏è Corriger la grammaire et l'orthographe",
    contexts: ["selection"]
  });

  // Sous-menu pour "Traduire"
  chrome.contextMenus.create({
    id: "translate",
    parentId: "ComposeIA",
    title: "üåç Traduire",
    contexts: ["selection"]
  });

  // Sous-menu pour "Traduire en Fran√ßais"
  chrome.contextMenus.create({
    id: "translate-fr",
    parentId: "translate",
    title: "üá´üá∑ Traduire en Fran√ßais",
    contexts: ["selection"]
  });

  // Sous-menu pour "Traduire en Anglais"
  chrome.contextMenus.create({
    id: "translate-en",
    parentId: "translate",
    title: "üá¨üáß Traduire en Anglais",
    contexts: ["selection"]
  });

  // Sous-menu pour "Traduire en Allemand"
  chrome.contextMenus.create({
    id: "translate-de",
    parentId: "translate",
    title: "üá©üá™ Traduire en Allemand",
    contexts: ["selection"]
  });

  // Sous-menu pour "Rallonger"
  chrome.contextMenus.create({
    id: "expand-text",
    parentId: "ComposeIA",
    title: "‚ûï Rallonger le texte",
    contexts: ["selection"]
  });

  // Sous-menu pour "Raccourcir"
  chrome.contextMenus.create({
    id: "shorten-text",
    parentId: "ComposeIA",
    title: "‚ûñ Raccourcir le texte",
    contexts: ["selection"]
  });

  // Sous-menu pour "Modifier le ton"
  chrome.contextMenus.create({
    id: "modify-tone",
    parentId: "ComposeIA",
    title: "üé≠ Modifier le ton",
    contexts: ["selection"]
  });

  // Sous-menus pour les diff√©rents tons
  const tones = [
    { id: "tone-professional", title: "üëî Professionnel" },
    { id: "tone-informal", title: "üòé Informel" },
    { id: "tone-direct", title: "‚û°Ô∏è Simple et direct" },
    { id: "tone-assertive", title: "üí™ Assertif" },
    { id: "tone-friendly", title: "üòä Amical" },
  ];

  tones.forEach(tone => {
    chrome.contextMenus.create({
      id: tone.id,
      parentId: "modify-tone",
      title: tone.title,
      contexts: ["selection"]
    });
  });

  // Sous-menu pour "Simplifier la formulation"
  chrome.contextMenus.create({
    id: "simplify-text",
    parentId: "ComposeIA",
    title: "üßπ Simplifier la formulation",
    contexts: ["selection"]
  });

  // Sous-menu pour "Expliquer"
  chrome.contextMenus.create({
    id: "explain-text",
    parentId: "ComposeIA",
    title: "üí° Expliquer",
    contexts: ["selection"]
  });
  
  // Sous-menu pour "Expliquer"
  chrome.contextMenus.create({
    id: "execute-text",
    parentId: "ComposeIA",
    title: "üéØ Executer une t√¢che",
    contexts: ["selection"]
  });
});

// √âcouter les clics sur le menu contextuel
chrome.contextMenus.onClicked.addListener((info, tab) => {
  if (info.menuItemId === "improve-style") {
    processSelectedText(info.selectionText, "am√©liorer", tab.id);
  } else if (info.menuItemId === "correct-grammar") {
    processSelectedText(info.selectionText, "corriger", tab.id);
  } else if (info.menuItemId === "translate-fr") {
    processSelectedText(info.selectionText, "traduire", tab.id, "fr");
  } else if (info.menuItemId === "translate-en") {
    processSelectedText(info.selectionText, "traduire", tab.id, "en");
  } else if (info.menuItemId === "translate-de") {
    processSelectedText(info.selectionText, "traduire", tab.id, "de");
  } else if (info.menuItemId === "expand-text") {
    processSelectedText(info.selectionText, "rallonger", tab.id);
  } else if (info.menuItemId === "shorten-text") {
    processSelectedText(info.selectionText, "raccourcir", tab.id);
  } else if (info.menuItemId.startsWith("tone")) {
    const tone = info.menuItemId.split("-")[1]; // Extraire le ton s√©lectionn√©
    processSelectedText(info.selectionText, "modifier-ton", tab.id, tone);
  } else if (info.menuItemId === "simplify-text") {
    processSelectedText(info.selectionText, "simplifier", tab.id);
  } else if (info.menuItemId === "explain-text") {
    processSelectedText(info.selectionText, "expliquer", tab.id);
  } else if (info.menuItemId === "execute-text") {
    processSelectedText(info.selectionText, "executer", tab.id);
  }
});

// Fonction pour traiter le texte s√©lectionn√©
function processSelectedText(text, action, tabId, extraInput = null) {
  let systemMessage = "";
  let userMessage = "";

  if (action === "am√©liorer") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† am√©liorer le style d'un texte. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en Fran√ßais : [Texte avec le style am√©lior√©, au format Markdown.]";
    userMessage = `Here is the text to improve: ${text}`;
  } else if (action === "corriger") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† corriger la grammaire et l'orthographe d'un texte. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en Fran√ßais : [Texte avec la grammaire et l'orthographe corrig√©es, au format Markdown.]";
    userMessage = `Here is the text to correct: ${text}`;
  } else if (action === "traduire" && extraInput) {
    systemMessage = `Vous √™tes un assistant aidant un utilisateur √† traduire un texte de fran√ßais √† ${extraInput}. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en ${extraInput} : [Texte traduit en ${extraInput}, au format Markdown.]`;
    userMessage = `Here is the text to translate: ${text}`;
  } else if (action === "rallonger") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† rallonger un texte existant en ajoutant du contenu pertinent et informatif. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en Fran√ßais : [Texte rallong√© avec du contenu suppl√©mentaire, au format Markdown.]";
    userMessage = `Please expand upon the following text: ${text}`;
  } else if (action === "raccourcir") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† raccourcir un texte en le condensant tout en conservant les informations essentielles. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en Fran√ßais : [Texte raccourci et condens√©, au format Markdown.]";
    userMessage = `Please shorten the following text: ${text}`;
  } else if (action === "modifier-ton" && extraInput) {
    systemMessage = `Vous √™tes un assistant aidant un utilisateur √† reformuler un texte avec un ton plus ${extraInput}. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en Fran√ßais : [Texte reformul√© avec un ton ${extraInput}, au format Markdown.].`;
    userMessage = `Please adjust the tone of the following text: ${text}`;
  } else if (action === "simplifier") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† simplifier la formulation d'un texte pour le rendre plus clair et compr√©hensible. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Sortie en Fran√ßais : [Texte avec une formulation simplifi√©e, au format Markdown.]";
    userMessage = `Please simplify the following text: ${text}`;
  } else if (action === "expliquer") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† expliquer un texte de mani√®re claire et d√©taill√©e. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement, mais utilisez-le comme base pour l'explication. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : Explication en Fran√ßais : [Explication d√©taill√©e du texte, au format Markdown.]";
    userMessage = `Please explain the meaning of the following text: ${text}`;
  } else if (action === "executer") {
    systemMessage = "Vous √™tes un assistant aidant un utilisateur √† r√©diger un texte. Sortez le r√©sultat au format Markdown. N'incluez pas de liens. Ne copiez pas le contenu original litt√©ralement, mais utilisez-le comme base pour l'explication. Utilisez ce format, en rempla√ßant le texte entre crochets par le r√©sultat. N'incluez pas les crochets dans la sortie : R√©daction en Fran√ßais : [R√©daction du texte, au format Markdown.]";
    userMessage = `${text}`;
  }

  // Appeler l'API Groq
  fetch("https://api.groq.com/openai/v1/chat/completions", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ------------------------------------------` // Remplace par ta cl√© API
    },
    body: JSON.stringify({
      "messages": [
        {
          "role": "system",
          "content": systemMessage
        },
        {
          "role": "user",
          "content": userMessage
        }
      ],
      "model": "mixtral-8x7b-32768",
      "temperature": 1,
      "max_tokens": 1024,
      "top_p": 1
    })
  })
    .then(response => response.json())
    .then(data => {
      const result = data.choices[0].message.content;

      // Injecter un script dans l'onglet actif pour remplacer le texte s√©lectionn√© par le r√©sultat
      chrome.scripting.executeScript({
        target: { tabId: tabId },
        func: replaceSelectedText,
        args: [result]
      });
    })
    .catch(error => {
      console.error("Erreur lors de l'appel √† l'API Groq:", error);
    });
}

// Fonction inject√©e dans la page pour remplacer le texte s√©lectionn√© par le r√©sultat
function replaceSelectedText(result) {
  const selection = window.getSelection();
  if (!selection.rangeCount) return;

  // Obtenir la plage s√©lectionn√©e
  const range = selection.getRangeAt(0);

  // Supprimer le contenu actuel de la s√©lection
  range.deleteContents();

  // Cr√©er un n≈ìud texte avec le nouveau contenu
  const newNode = document.createTextNode(result);

  // Ins√©rer le nouveau contenu dans la plage
  range.insertNode(newNode);

  // Mettre √† jour la s√©lection pour placer le curseur apr√®s le texte ins√©r√©
  selection.removeAllRanges();
  const newRange = document.createRange();
  newRange.setStartAfter(newNode);
  selection.addRange(newRange);
}